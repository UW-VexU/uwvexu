{"version":3,"file":"static/webpack/static/development/pages/index.js.3c95c35f18dd3f8f744f.hot-update.js","sources":["webpack:///./components/Event.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport CalendarIcon from './CalendarIcon';\n\nconst getMonthFullName = monthNumber => {\n  if (monthNumber < 1 || monthNumber > 12) {\n    throw `Month number is out of range (expected between 1 and 12, got ${monthNumber})`;\n  }\n  return [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ][monthNumber - 1];\n};\n\nconst getDayFullName = dayNumber => {\n  if (dayNumber < 1 || dayNumber > 31) {\n    throw `Day number is out of range (expected between 1 and 31, got ${dayNumber})`;\n  }\n  switch (dayNumber) {\n    case 1:\n    case 21:\n    case 31:\n      return `${dayNumber}st`;\n    case 2:\n    case 22:\n      return `${dayNumber}nd`;\n    case 3:\n    case 23:\n      return `${dayNumber}rd`;\n    default:\n      return `${dayNumber}th`;\n  }\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst CalendarIconContainer = styled.div`\n  margin-right: 2rem;\n`;\n\nconst DateHeader = styled.span`\n  font-weight: bold;\n`;\n\n/**\n * @param {{\n *   month: number;\n *   day: number;\n *   dayOfWeek: string;\n *   children: React.ReactNode;\n * }} props\n */\nexport default props => {\n  return (\n    <Container>\n      <CalendarIconContainer>\n        <CalendarIcon month={props.month} day={props.day} />\n      </CalendarIconContainer>\n      <div>\n        <DateHeader>\n          {props.dayOfWeek}, {getMonthFullName(props.month)}{' '}\n          {getDayFullName(props.day)}\n        </DateHeader>\n        <br />\n        {props.children}\n      </div>\n      {props.space && <><br/><br/></>}\n    </Container>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAZA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}